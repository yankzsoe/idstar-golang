definitions:
  dtos.CreateOrUpdateUserRequest:
    properties:
      confirmPassword:
        minLength: 5
        type: string
      email:
        type: string
      nickname:
        type: string
      password:
        minLength: 5
        type: string
      username:
        type: string
    required:
    - confirmPassword
    - email
    - password
    - username
    type: object
  dtos.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login user to authorization
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.LoginRequest'
      produces:
      - application/json
      responses: {}
      summary: Login user
      tags:
      - Authentication
  /user/:
    get:
      consumes:
      - application/json
      description: Get All User Account
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: offset
        type: integer
      - in: query
        name: where
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get All User Data
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Add new fake User Account
      parameters:
      - description: User
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.CreateOrUpdateUserRequest'
      produces:
      - application/json
      responses: {}
      summary: Post User Data
      tags:
      - User
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete User Account
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Delete User Data
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Get User Account
      parameters:
      - description: ID
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get User Data
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update User Account
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.CreateOrUpdateUserRequest'
      produces:
      - application/json
      responses: {}
      summary: Put User Data
      tags:
      - User
swagger: "2.0"
